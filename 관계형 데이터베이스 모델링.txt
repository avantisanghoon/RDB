Data Modeling
: 아무리 복잡한 정보도 표 에 담을 수 있다.
: 프로세스
  업무파악 -> 개념적 데이터 모델링 -> 논리적 데이터 모델링 -> 물리적 데이터 모델링
  
  업무파악 : 의뢰자가 원하는 것은 무엇인가?
  개념적 데이터 모델링 -> 내가 하고자 하는 일에 어떤 개념이 있고 서로 어떤 관계가 있는가? 어떻게 연결되는가?
  논리적 데이터 모델링 -> 관계형 데이터 베이스에 맞게 표로 전환하는 방법
  물리적 데이터 모델링 -> 어떤 데이터베이스 제품을 사용할 것인가를 선택 및 코드 작성(SQL code 작성)
  
모델링이란 : 문제를 현실로 부터 뜯어내서(분리하고 분해 해서) 고도의 추상화 과정을 거쳐 컴퓨터로 옮기는 과정을
       : 현실 문제가 최종적으로 표에 잘 담겼는가? 

1. 업무파악
  1-1 : 컴퓨터 문제 해결
  1-2 : 현실의 문제 해결 : 아이디어 해결, 현실의 문제 해결 / 현실 문제를 정확히 파악할 수 있는 능력 / 실무자들과 소통 / 업무파악
                    : UI 를 함께 그려본다(의뢰인과 함께 그려본다) / 말 의 기능을 불신해라 / 서로의 생각을 끊임없이 크로스 체크 하자
	* 프로토타입 프로그램인 카카오oven을 이용해 보자			

2. 개념적 데이터 모델링이란?
  2-1. 효과 : 필터 / 언어 /ERD (Entity Relationship Diagram)
  2-2. Entity -> Table
       Attribute -> Column
	   Relation -> PK, FK
	   Tuple -> Row
	   
3. Entity (drawio 를 이용)
  3-1. 기획서 에서 Entity 찾아내기 (큰 덩어리, 카테코리 찾아내기)

4. Key(식별키) 를 지정한다. : 어떤 값을 중심값으로 할 것인가? 핸드폰번호, 카드번호, NFC 번호 등
  4-1. 후보키(cantidate key)
       기본키(primary key)
	   대체키(alternate key)

5. Relationship

6. Cardinality / Optionality

  6-1. Cardinality 1:1 / 1:n / n:n
  6-2. Optionality : 어떤 조건에서 옵션일 경우 (어떤 조건을 할 수도 있고 안 한수도 있고)
        ex) : 저자가 댓글을 쓸 수도 있고 안 쓸수도 있다. 저자에게 댓글은 옵션 이다.
		
4. 논리적 모델링

  4-1. Mapping Rule
  4-2. ERMaster 이용
  4-3. 관계의 처리 (1:1)
      : 의존하는 곳에 FK(자식테이블)/ 기준이 되는, 의존의 중심이 되는 곳에 PK(부모테이블)
  4-4. 관계의 처리 (1:n)
  